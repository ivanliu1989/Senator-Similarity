title="Combined Ratio %",
legend="{position:'bottom'}"))
plot(CR)
df <- data.frame("Year"=c(2009,2010), "Lloyd\\'s"=c(86.1, 93.3),
"Munich Re\\'s R/I"=c(95.3, 100.5),
check.names=FALSE)
df
CR <- gvisColumnChart(df, options=list(vAxis='{baseline:0}',
title="Combined Ratio %",
gvis.editor ='Edit me!',
legend="{position:'bottom'}"))
plot(CR)
```{r motionchartcode, results='asis'}
library(googleVis)
plot(gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400)), tag="chart")
```
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1
require(rCharts)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1
h1 <- hPlot(x = "Wr.Hnd", y = "NW.Hnd", data = MASS::survey, type = c("line", "bubble", "scatter"),
group = "Clap", size = "Age")
h1
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] = c("category", "year")
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
require(reshape2)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] = c("category", "year")
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1
h1 <- hPlot(x = "Wr.Hnd", y = "NW.Hnd", data = MASS::survey, type = c("line",
"bubble", "scatter"), group = "Clap", size = "Age")
h1$print("chart5")
h1 <- hPlot(x = "Wr.Hnd", y = "NW.Hnd", data = MASS::survey, type = c("line", "bubble", "scatter"),
group = "Clap", size = "Age")
h1
require(DMwR)
data(sales)
head(sales)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
summary(sales)
?nlevels
nlevels(sales$ID)
nlevels(sales$Prod)
sum(is.na(sales$Quant)& is.na(sales$Val))
table(sales$Insp)
nrow(sales)
table(sales$Insp)/nrow(sales)*100
totS <- table(sales$ID)
totP <- table(sales$Prod)
xlab='Salespeople',ylab='Amount')
barplot(totS, main="Transactions per salespeople", name.arg='',
xlab='Salespeople',ylab='Amount')
barplot(totP, main='Transactions per product',
xlab='Products',ylab='Amount')
barplot(totP, main='Transactions per product', names.arg='',
xlab='Products',ylab='Amount')
par(mfcol = c(1,2))
barplot(totS, main="Transactions per salespeople", name.arg='',
xlab='Salespeople',ylab='Amount')
barplot(totP, main='Transactions per product', names.arg='',
xlab='Products',ylab='Amount')
par(mfcol = c(2,1))
barplot(totS, main="Transactions per salespeople", name.arg='',
xlab='Salespeople',ylab='Amount')
barplot(totP, main='Transactions per product', names.arg='',
xlab='Products',ylab='Amount')
par(mfcol = c(1,2))
barplot(totS, main="Transactions per salespeople", name.arg='',
xlab='Salespeople',ylab='Amount')
barplot(totP, main='Transactions per product', names.arg='',
xlab='Products',ylab='Amount')
sales$Uprice <- sales$Val/sales$Quant
summary(sales$Uprice)
attach(sales)
upp <- aggregate(Uprice,list(Prod,median,na.rm=T))
upp <- aggregate(Uprice,list(Prod),median,na.rm=T)
upp
topP <- sapply(c(T,F),function(o)
upp[order(upp[,2],decreasing=o)[1:5],1])
topP
colnames(topP)<-c('Expensive','Cheap')
topP
tops <- sales[Prod %in% topP[1,],c('Prod','Uprice')]
tops
tops$Prod <- factor(tops$Prod)
boxplot(Uprice~Prod, data=tops,ylab='Uprice',log='y')
par(mfcol = c(1,1))
boxplot(Uprice~Prod, data=tops,ylab='Uprice',log='y')
boxplot(Uprice~Prod, data=tops,ylab='Uprice')
log='y'
boxplot(Uprice~Prod, data=tops,ylab='Uprice',log='y')
vs <- aggregate(Val,list(ID),median,na.rm=T)
scoresSs <- sapply(c(T,F),function(o)
vs[order(vs$x,decreasing=o)[1:5],1])
vs
scoresSs
colnames(scoresSs)<-c('Most','Least')
scoresSs
scores <- sales[ID %in% scoresSs[1,],c('ID','Val')]
scores
scores$ID <- factor(scores$ID)
boxplot(Val~ID,data=scores,ylab='Val',log='y')
vs <- aggregate(Val,list(ID),sum,na.rm=T)
scoresSs <- sapply(c(T,F),function(o)
vs[order(vs$x,decreasing=o)[1:5],1])
colnames(scoresSs)<-c('Most','Least')
scoresSs
scores <- sales[ID %in% scoresSs[1,],c('ID','Val')]
scores$ID <- factor(scores$ID)
boxplot(Val~ID,data=scores,ylab='Val',log='y')
attach(sales)
upp <- aggregate(Uprice,list(Prod),median,na.rm=T)
topP <- sapply(c(T,F),function(o)
upp[order(upp[,2],decreasing=o)[1:5],1])
colnames(topP)<-c('Expensive','Cheap')
topP
tops <- sales[Prod %in% topP[1,],c('Prod','Uprice')]
tops$Prod <- factor(tops$Prod)
par(mfcol = c(1,2))
boxplot(Uprice~Prod, data=tops,ylab='Uprice',log='y')
vs <- aggregate(Val,list(ID),sum,na.rm=T)
scoresSs <- sapply(c(T,F),function(o)
vs[order(vs$x,decreasing=o)[1:5],1])
colnames(scoresSs)<-c('Most','Least')
scoresSs
scores <- sales[ID %in% scoresSs[1,],c('ID','Val')]
scores$ID <- factor(scores$ID)
boxplot(Val~ID,data=scores,ylab='Val',log='y')
sum(vs[order(vs$x,decreasing=T)[1:100],2])/sum(Val,na.rm=T)*100
sum(vs[order(vs$x,decreasing=F)[1:2000],2])/sum(Val,na.rm=T)*100
head(Val)
qs <- aggregate(Quant,list(Prod),sum,na.rm=T)
scoresPs <- sapply(c(T,F),function(x)
qs[order(qs$x,decreasing=o)[1:5,1]])
scoresPs <- sapply(c(T,F),function(o)
qs[order(qs$x,decreasing=o)[1:5,1]])
scoresPs <- sapply(c(T,F),function(o)
qs[order(qs$x,decreasing=o)[1:5,1])
scoresPs <- sapply(c(T,F),function(o)
qs[order(qs$x,decreasing=o)[1:5,1]]
)
scoresPs <- sapply(c(T,F),function(o)
qs[order(qs$x,decreasing=o)[1:5,1]])
scoresPs <- sapply(c(T,F),function(o)
qs[order(qs$x,decreasing=o)[1:5],1])
colnames(scoresPs) <- c('Most','Least')
scoresPs
sum(as.double(qs[order(qs$x,decreasing=T)[1:100],2]))/sum(as.double(Quant),na.rm=T)*100
sum(as.double(qs[order(qs$x,decreasing=F)[1:2000],2]))/sum(as.double(Quant),na.rm=T)*100
sum(as.double(qs[order(qs$x,decreasing=F)[1:4000],2]))/sum(as.double(Quant),na.rm=T)*100
head(Uprice)
list(Prod=Prod)
head(list(Prod=Prod))
head(Prod)
?tapply
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
out <- tapply(Uprice,list(Prod=Prod),function(x)length(boxplot.stats(x)$out))
out
out[order(out,decreasing = T)[1:10]]
sum(out)
sum(out)/nrow(sales)
sum(out)/nrow(sales)*100
source('data explorasion.R')
source('Data explorasion.R')
source('Data.explorasion.R')
source('Data_explorasion.R')
gc()
totS <- table(ID)
totP <- table(Prod)
head(totS)
nas <- sales[which(is.na(Quant)&is.na(Val)),c('ID','Prod')]
nas
propS <- 100*table(nan$ID)/totS
propS
propS <- 100*table(nas$ID)/totS
propS
head(propS)
propS[order(propS,decreasing=T)[1:10]]
propP <- 100*table(nas$Prod)/totP
head(propP)
propP[order(propP,decreasing=T)[1:10]]
detach(sales)
sales <- sales[-which(is.na(sales$Quant)&is.na(sales$Val)),]
nnasQp <- tapply(sales$Quant,list(sales$Prod),function(x)sum(is.na(x)))
propNAsQp <- nnasQp/table(sales$Prod)
propNAsQp[order(propNAsQp,decreasing=T)[1:10]]
sales <- sales[!sales$Prod %in% c('p2442','p2443'),]
nlevels(sales$Prod)
sales$Prod <- factor(sales$Prod)
nlevels(sales$Prod)
nnasQs <- tapply(sales$Quant,list(sales$ID),function(x)sum(is.na(x)))
propNAsQs <- nnasQs/table(sales$ID)
propNAsQs[order(propNAsQs,decreasing = T)[1:10]]
nnasVp <- tapply(sales$Val,list(sales$Prod),function(x)sum(is.na(x)))
propNAsVp<-nnasVp/table(sales$Val)
propNAsVp<-nnasVp/table(sales$Prod)
propNAsVp[order(propNAsVp,decreasing = T)[1:10]]
nnasVs <- tapply(sales$Val,list(sales$ID),function(x)sum(is.na(x)))
propNAsVs<-nnasVp/table(sales$ID)
propNAsVs[order(propNAsVp,decreasing = T)[1:10]]
propNAsVs<-nnasVs/table(sales$ID)
propNAsVs[order(propNAsVp,decreasing = T)[1:10]]
nnasVs <- tapply(sales$Val,list(sales$ID),function(x)sum(is.na(x)))
propNAsVs<-nnasVs/table(sales$ID)
propNAsVs[order(propNAsVs,decreasing = T)[1:10]]
setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\Senator-Similarity")
setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\Senator-Similarity")
set.seed(851982)
ex.matrix <- matrix(sample(c(-1,0,1),24,replace=T),nrow=4,ncol=6)
ex.matrix
row.names(ex.matrix)<- c('A','B','C','D')
colnames(ex.matrix)<-c('P1','P2','P3','P4','P5','P6')
ex.matrix
t(ex.matrix)
ex.mult <- ex.matrix %*% t(ex.matrix)
ex.mult
ex.mult.2 <- t(ex.matrix) %*% ex.matrix
ex.mult.2
sqrt(sum((ex.mult[1,]-ex.mult[4,])^2))
ex.dist <- dist(ex.mult)
ex.dist
ex.mds <- cmdscale(ex.dist)
plot(ex.mds,type='n')
text(ex.mds,c('A','B','C','D'))
ex.mds
png('MDS.png')
plot(ex.mds,type='n')
dev.off()
png('MDS.png')
plot(ex.mds,type='n')
text(ex.mds,c('A','B','C','D'))
dev.off()
setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\Senator-Similarity")
library(foreign)
library(ggplot2)
data.dir <- "data/roll_call/"
data.files <- list.files(data.dir)
data.files
rollcall.data <- lapply(data.files,
function(f) read.dta(paste(data.dir, f, sep=""), convert.factors=FALSE))
dim(rollcall.data[[1]])
head(rollcall.data[[1]])
rollcall.simplified <- function(df){
no.pres <- subset(df,state<99)
for(i in 10:ncol(no.pres)){
no.pres[,i]<-ifelse(no.pres[,i]>6,0,no.pres[,i])
no.pres[,i]<-ifelse(no.pres[,i]>0 & no.pres[,i]<4,1,no.pres[,i])
no.pres[,i]<-ifelse(no.pres[,i]>1,-1,no.pres[,i])
}
return(as.matrix(no.pres[,10:ncol(no.pres)]))
}
rollcall.simple<-lapply(rollcall.data,rollcall.simplified)
rollcall.simple
rollcall.dist <- lapply(rollcall.simple,function(m)dist(m %*% t(m)))
rollcall.simple[1]
rollcall.dist[1]
rollcall.mds <- lapply(rollcall.dist,function(d)as.data.frame((cmdscale(d,k=2))*-1))
rollcall.mds[1]
congresses <- 101:111
length(rollcall.mds
)
rollcall.mds[[1]]
rollcall.mds[1]
congress.names <- sapply(as.character(congress$name),function(n) strsplit(n,'[,]')[[1]][1])
for (in in 1:length(rollcall.mds)){
name(rollcall.mds[[i]])<-('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),function(n) strsplit(n,'[,]')[[1]][1])
}
congresses <- 101:111
for (in in 1:length(rollcall.mds)){
name(rollcall.mds[[i]])<-('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),
function(n) strsplit(n,'[,]')[[1]][1])
rollcall.mds[[i]]<-transform(rollcall.mds[[i]],name=congress.names,
party=as.factor(congress$party),congress=congresses[i])
}
for (i in 1:length(rollcall.mds)){
name(rollcall.mds[[i]])<-('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),
function(n) strsplit(n,'[,]')[[1]][1])
rollcall.mds[[i]]<-transform(rollcall.mds[[i]],name=congress.names,
party=as.factor(congress$party),congress=congresses[i])
}
for (i in 1:length(rollcall.mds)){
name(rollcall.mds[[i]])<-('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),
function(n) strsplit(n,'[, ]')[[1]][1])
rollcall.mds[[i]]<-transform(rollcall.mds[[i]],name=congress.names,
party=as.factor(congress$party),congress=congresses[i])
}
for (i in 1:length(rollcall.mds)){
name(rollcall.mds[[i]])<-c('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),
function(n) strsplit(n,'[, ]')[[1]][1])
rollcall.mds[[i]]<-transform(rollcall.mds[[i]],name=congress.names,
party=as.factor(congress$party),congress=congresses[i])
}
for (i in 1:length(rollcall.mds)){
names(rollcall.mds[[i]])<-c('x','y')
congress <- subset(rollcall.data[[i]],state<99)
congress.names <- sapply(as.character(congress$name),
function(n) strsplit(n,'[, ]')[[1]][1])
rollcall.mds[[i]]<-transform(rollcall.mds[[i]],name=congress.names,
party=as.factor(congress$party),congress=congresses[i])
}
head(rollcall.mds[[1]])
cong.110 <- rollcall.mds[[9]]
cong.110
cong.110 <- rollcall.mds[[9]]
base.110 <- ggplot(cong.110, aes(x=x,y=y))+scale_size(to=c(2,2),legend=F)+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks-c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+scale_size(to=c(2,2), legend=FALSE)+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks-c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks-c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(legend=F)+theme_bw()+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(legend=F)+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=theme_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blan,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank,axis.text.x=theme_blank(),
axis.text.y=theme_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=theme_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank,axis.text.x=element_blank(),
axis.text.y=element_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=element_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.text.x=element_blank(),
axis.text.y=element_blank,title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=element_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),title='Roll Call Vote MDS Clustering for 110th U.S. Senate',
panel.grid.major=element_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
base.110 <- ggplot(cong.110, aes(x=x,y=y))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),title=element_text('Roll Call Vote MDS Clustering for 110th U.S. Senate'),
panel.grid.major=element_blank())+xlab('')+ylab('')+
scale_color_manual(name='Party',values=c('100'='black','200'='dimgray','328'='grey'),
breaks=c('100','200','328'),labels=c('Dem.','Rep.','Ind,'))
print(base.110+geom_point(aes(shape=party,alpha=.75,size=2)))
print(base.110+geom_text(aes(color=party, alpha=0.75, label=cong.110$name, size=2)))
png('clu_1.png')
print(base.110+geom_point(aes(shape=party,alpha=.75,size=2)))
dev.off()
png('clu_2.png')
print(base.110+geom_text(aes(color=party, alpha=0.75, label=cong.110$name, size=2)))
dev.off()
all.mds <- do.call(rbind, rollcall.mds)
all.mds
all.plot <- ggplot(all.mds, aes(x=x, y=y))+
geom_point(aes(shape=party, alpha=0.75, size=2))+
scale_size(to=c(2,2), legend=FALSE)+
scale_alpha(legend=FALSE)+theme_bw()+
opts(axis.ticks=theme_blank(), axis.text.x=theme_blank(),
axis.text.y=theme_blank(),
title="Roll Call Vote MDS Clustering for U.S. Senate
(101st - 111th Congress)",
panel.grid.major=theme_blank())+
xlab("")+ylab("")+
scale_shape(name="Party", breaks=c("100","200","328"),
labels=c("Dem.", "Rep.", "Ind."),
solid=FALSE)+facet_wrap(~ congress)
all.plot <- ggplot(all.mds, aes(x=x, y=y))+
geom_point(aes(shape=party, alpha=0.75, size=2))+
scale_alpha(legend=FALSE)+theme_bw()+
opts(axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(),
title="Roll Call Vote MDS Clustering for U.S. Senate
(101st - 111th Congress)",
panel.grid.major=element_blank())+
xlab("")+ylab("")+
scale_shape(name="Party", breaks=c("100","200","328"),
labels=c("Dem.", "Rep.", "Ind."),
solid=FALSE)+facet_wrap(~ congress)
all.plot <- ggplot(all.mds, aes(x=x, y=y))+
geom_point(aes(shape=party, alpha=0.75, size=2))+
scale_alpha(guide="none")+theme_bw()+
opts(axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(),
title="Roll Call Vote MDS Clustering for U.S. Senate
(101st - 111th Congress)",
panel.grid.major=element_blank())+
xlab("")+ylab("")+
scale_shape(name="Party", breaks=c("100","200","328"),
labels=c("Dem.", "Rep.", "Ind."),
solid=FALSE)+facet_wrap(~ congress)
all.plot <- ggplot(all.mds, aes(x=x, y=y))+
geom_point(aes(shape=party, alpha=0.75, size=2))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(),
title="Roll Call Vote MDS Clustering for U.S. Senate
(101st - 111th Congress)",
panel.grid.major=element_blank())+
xlab("")+ylab("")+
scale_shape(name="Party", breaks=c("100","200","328"),
labels=c("Dem.", "Rep.", "Ind."),
solid=FALSE)+facet_wrap(~ congress)
all.plot <- ggplot(all.mds, aes(x=x, y=y))+
geom_point(aes(shape=party, alpha=0.75, size=2))+
scale_alpha(guide="none")+theme_bw()+
theme(axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(),
title=element_text("Roll Call Vote MDS Clustering for U.S. Senate
(101st - 111th Congress)"),
panel.grid.major=element_blank())+
xlab("")+ylab("")+
scale_shape(name="Party", breaks=c("100","200","328"),
labels=c("Dem.", "Rep.", "Ind."),
solid=FALSE)+facet_wrap(~ congress)
all.plot
png('clu_3.png')
all.plot
dev.off()
png('clu_3.png',height = 800,width = 800)
all.plot
dev.off()
png('clu_3.png',height = 1050,width = 800)
all.plot
dev.off()
png('clu_3.png',height = 800,width = 1050)
all.plot
dev.off()
